#!/usr/bin/env python3

import os
import openai
import sys
from multiprocessing import Pool

def gpt(content):
    max_tokens = 100
    temperature = 1
    d = openai.ChatCompletion.create(
      model="gpt-3.5-turbo",
      messages=[{"role": "user", "content": content}],
    )
    return d.choices[0]["message"]["content"]

def process_file(fnp):
    [fn, args] = fnp
    with open(fn) as f:
        body = f.read()
    message = args + "\n" + body
    with open(fn, 'w') as f:
        f.write(gpt(message))
        f.write("\n")

def main():
    if len(sys.argv) == 1 or sys.argv[1] == "-":
        args = " ".join(sys.argv[2:])
        body = "".join(sys.stdin.readlines())
        message = args + "\n" + body
        files = [l.strip() for l in sys.stdin.readlines()]
        print(gpt(message))
    elif sys.argv[1] == "-f":
        args = " ".join(sys.argv[2:])
        file_args = [[l.strip(), args] for l in sys.stdin.readlines()]
        pool = Pool(processes=os.cpu_count())
        pool.map(process_file, file_args)
        pool.close()
        pool.join()
    else:
        args = " ".join(sys.argv[1:])
        message = args
        print(gpt(message))

if __name__ == "__main__":
    openai.organization = os.getenv("OPENAI_ORGANIZATION")
    openai.api_key = os.getenv("OPENAI_API_KEY")

    main()
